{"version":3,"sources":["js/lessons/ES6arrayHelpers.js","js/main.js"],"names":["theForLoop","moods","i","length","console","log","theForEachLoop","forEach","mood","theMapHelper","teams","name","coach","country","wins","losses","draws","matchWinners","map","team","theFilterHelper","notUSATeams","filter","theReduceHelper","matchResults","seasonResults","reduce","match","result","array1","reducer","previousValue","currentValue"],"mappings":";AA6LA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,QAAA,aAAA,QAAA,WAAA,QAAA,eAAA,QAAA,qBAAA,EAnLA,IAAMA,EAAa,WAEV,IADCC,IAAAA,EAAQ,CAAC,WAAY,QAAS,MAAO,SAClCC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAC9BE,QAAQC,IAAI,SAAUJ,EAAMC,KAgLpC,QAAA,WAAA,EA5KA,IAAMI,EAAiB,WAEL,CAAC,WAAY,QAAS,MAAO,SAErCC,QAAQ,SAAAC,GAAQJ,OAAAA,QAAQC,IAAIG,MAwKtC,QAAA,eAAA,EArHA,IAAMC,EAAe,WACXC,IAAAA,EAAQ,CACV,CACIC,KAAM,oBACNC,MAAO,uBACPC,QAAS,UACTC,KAAM,EACNC,OAAQ,EACRC,MAAO,GAEX,CACIL,KAAM,gBACNC,MAAO,oBACPC,QAAS,UACTC,KAAM,EACNC,OAAQ,EACRC,MAAO,GAEX,CACIL,KAAM,eACNC,MAAO,eACPC,QAAS,2BACTC,KAAM,EACNC,OAAQ,EACRC,MAAO,IAITC,EAAeP,EAAMQ,IAAI,SAAAC,GAAQA,OAAAA,EAAKL,MAAQ,IAEpDV,QAAQC,IAAI,CAAEK,MAAAA,IACdN,QAAQC,IAAI,CAAEY,aAAAA,KAsFlB,QAAA,aAAA,EApEA,IAAMG,EAAkB,WAEdV,IAAAA,EAAQ,CAEV,CACIC,KAAM,oBACNC,MAAO,uBACPC,QAAS,UACTC,KAAM,EACNC,OAAQ,EACRC,MAAO,GAEX,CACIL,KAAM,gBACNC,MAAO,oBACPC,QAAS,UACTC,KAAM,EACNC,OAAQ,EACRC,MAAO,GAEP,CACIL,KAAM,eACNC,MAAO,eACPC,QAAS,2BACTC,KAAM,EACNC,OAAQ,EACRC,MAAO,IAIbK,EAAcX,EAAMY,OAAO,SAAAH,GAAQA,MAAiB,6BAAjBA,EAAKN,UAE9CT,QAAQC,IAAI,CAAEK,MAAAA,IACdN,QAAQC,IAAI,CAAEgB,YAAAA,KAmClB,QAAA,gBAAA,EA7BA,IAAME,EAAkB,WACdC,IAEAC,EAFe,CAAC,MAAO,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,MAAO,OAAQ,OAErDC,OAAO,SAACC,EAAOC,GAEvCD,OADPA,EAAMC,IAAWD,EAAMC,IAAW,GAAK,EAChCD,GAER,IAEHvB,QAAQC,IAAI,CAAEoB,cAAAA,KAoBlB,QAAA,gBAAA,EATA,IAAMI,EAAS,CAAC,EAAG,EAAG,EAAG,GACnBC,EAAU,SAACC,EAAeC,GAAiBD,OAAAA,EAAgBC,GAGjE5B,QAAQC,IAAIwB,EAAOH,OAAOI,IAI1B1B,QAAQC,IAAIwB,EAAOH,OAAOI,EAAS;;AChJnC,aAZA,IAAA,EAAA,QAAA,8BAQA,EAAA,EAAA,eACA,EAAA,EAAA,mBACA,EAAA,EAAA,iBACA,EAAA,EAAA,oBACA,EAAA,EAAA","file":"main.d48fd4a5.js","sourceRoot":"..","sourcesContent":["// const theForLoop = () => {\n//     const moods = ['Ecstatic', 'Happy', 'meh', 'Upset'];\n\n//     for (let i = 0; i < moods.length; i++){\n//         console.log(\"I am: \", moods[i]);\n//     }\n// }\n\n//1///////////////////////////////////////////////////////// \n\nconst theForLoop = () => {\n    const moods = ['Ecstatic', 'Happy', 'meh', 'Upset'];\n    for (let i = 0; i < moods.length; i++){\n        console.log(\"I am: \", moods[i]);\n    }\n}\n\nconst theForEachLoop = () => {\n    \n    const moods = ['Ecstatic', 'Happy', 'meh', 'Upset'];\n\n    moods.forEach(mood => console.log(mood))\n    \n}\n\n// export {\n//     theForLoop,\n//     theForEachLoop\n// }\n    \n// //2///////////////////////////////////////////////////\n\n\n// const theForEachLoop = () => {\n    \n//     const moods = [\n//         {\n//             description: 'Ecstatic',\n//             currentFeeling: false\n//         },\n//         {\n//             description: 'Happy',\n//             currentFeeling: true\n//         },\n//         {\n//             description: 'meh',\n//             currentFeeling: false\n//         },\n//         {\n//             description: 'Upset',\n//             currentFeeling: false\n//         },\n//     ];\n\n\n//     moods.forEach(mood => {\n//         const string = \"Right now, I am\";\n\n//         if (mood.currentFeeling) {\n//             return console.log(string + mood.description);\n//         }\n\n//     })\n// }\n\n// export {\n//     theForLoop,\n//     theForEachLoop\n// }\n\n// //3//////////////////////////////////////////////\n\nconst theMapHelper = () => {\n    const teams = [\n        {\n            name: 'Manchester United',\n            coach: 'Ole Gunnar Soklsjear',\n            country: \"England\",\n            wins: 5,\n            losses: 2,\n            draws: 1            \n        },\n        {\n            name: 'Bayern Munich',\n            coach: 'Julian Nagelsmann',\n            country: \"Germany\",\n            wins: 6,\n            losses: 1,\n            draws: 1\n        },\n        {\n            name: 'Orlando City',\n            coach: 'Oscar Pareja',\n            country: \"United States of America\",\n            wins: 4,\n            losses: 2,\n            draws: 2\n        },\n    ]\n\n    const matchWinners = teams.map(team => team.wins += 1);\n\n    console.log({ teams });\n    console.log({ matchWinners });\n}\n\n// export{\n//     theForLoop,\n//     theForEachLoop,\n//     theMapHelper,\n// }\n\n\n// const matchWinners = teams.map(team => {\n//     team.wins += 1;\n//     return team;\n// });\n\n\n// /////////////////////////////////////////////\n\nconst theFilterHelper = () => {\n    \n    const teams = [\n    \n        {\n            name: 'Manchester United',\n            coach: 'Ole Gunnar Soklsjear',\n            country: \"England\",\n            wins: 5,\n            losses: 2,\n            draws: 1            \n        },\n        {\n            name: 'Bayern Munich',\n            coach: 'Julian Nagelsmann',\n            country: \"Germany\",\n            wins: 6,\n            losses: 1,\n            draws: 1\n        },\n            {\n                name: 'Orlando City',\n                coach: 'Oscar Pareja',\n                country: \"United States of America\",\n                wins: 4,\n                losses: 2,\n                draws: 2\n            },\n    ]\n    \n    const notUSATeams = teams.filter(team => team.country !== 'United States of America');\n\n    console.log({ teams });\n    console.log({ notUSATeams });\n\n}\n\n\n\nconst theReduceHelper = () => {\n    const matchResults = ['win', 'win', 'win', 'draw', 'loss', 'win', 'win', 'win', 'draw', 'win'];\n\n    const seasonResults = matchResults.reduce((match, result) => {\n        match[result] = (match[result] || 0) + 1;\n        return match;\n    \n    }, {})\n    \n    console.log({ seasonResults });\n}\n\nexport {\n    theForLoop,\n    theForEachLoop,\n    theMapHelper,\n    theFilterHelper,\n    theReduceHelper\n}\n\nconst array1 = [1, 2, 3, 4,];\nconst reducer = (previousValue, currentValue) => previousValue + currentValue;\n\n// 1 + 2 + 3 + 4\nconsole.log(array1.reduce(reducer));\n//expected output: 10\n\n// 5 + 1 + 2 + 3 + 4\nconsole.log(array1.reduce(reducer, 5));\n// expected output: 15\n\n","// import color from './modules/demo.js';\n// import {\n//     soda,\n//     candy\n// } from \"./modules/demo2.js\";\n\n// console.log({ color });\n// console.log({ candy });\n\n// import {\n//     theForLoop,\n//     // theForEachLoop\n// } from \"./lessons/ES6arrayHelpers.js\";\n\n//Best practice is to alphabetize your import lists,\n//but for the ease of these lessons we'll be importing\n//as we utilize them.\n\n// theForLoop();\n// theForEachLoop();\n\n////////////////////////////////////////////////////\n\n// import {\n//     theForLoop,\n//     theForEachLoop\n\n// } from \"./lessons/ES6arrayHelpers\";\n\n// theForLoop();\n// theForEachLoop();\n\nimport {\n    theForLoop,\n    theForEachLoop,\n    theMapHelper,\n    theFilterHelper,\n    theReduceHelper,\n} from \"./lessons/ES6arrayHelpers\";\n\ntheForLoop();\ntheForEachLoop();\ntheMapHelper();\ntheFilterHelper();\ntheReduceHelper();\n"]}